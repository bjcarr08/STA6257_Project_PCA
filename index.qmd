---
title: "PCA (principal component analysis)"
author: 
- Brandy Carr
- Lee
- Tavish
date: '`r Sys.Date()`'
format:
  html:
    code-fold: true
    highlight: pygments
course: STA 6257 - Advance Statistical Modeling
bibliography: references.bib # file contains bibtex for references
always_allow_html: true # this allows to get PDF with HTML features
#reference-section-title: References
#suppress-bibliography: true
editor: 
  markdown: 
    wrap: 72
---

```{=html}
<style>
 .title {
    color: #191970;    
  }
 .subtitle {
    color: #191970;
  }
  .author {
    color: #191970;
}
 .date {
    color: #191970;
  }
 body {
    background-color: #FAFAF5;
  }
 .bibliography {
    background-color: #FAFAF5;
}
 .reference-section-title {
    color: #191970;
}
</style>
```
## [Introduction]{style="color: #191970;"}

[Principal Component Analysis and Machine Learning Methods. In our
research, we learn the applications of how important and groundbreaking
Principal Component Analysis and Machine Learning Methods are. In these
papers we see how promising the impact is of PCA with recognizing
Microanerysm in medicine and how groundbreaking has been critical for
diagnosis and treatment of Diabetic Retinopathy. Other research papers
show a framework for coronary artery disease risk assessment in
intravascular ultrasound. The paper reflects on a novel strategy for
risk stratification based on plaque morphology embedded with principal
component analysis (PCA) for plaque feature dimensionality reduction and
dominant feature selection technique.[@Gorg2021] Facial recognition with
PCA and machine learning methods, From this Paper the authors have
identified that the best way to compare and evaluate the Facial
Recognition results with speed and accuracy was with PCA (Principal
Component Analysis) and as well as Support Vector Machine (SVM). Lastly
we see the importance of PCA with it identifying that the best way to
compare and evaluate the Facial Recognition results with speed and
accuracy was with PCA (Principal Component Analysis) and as well as
Support Vector Machine (SVM)[@Camargo].]{style="color: #8B814C;"}

[Principal Component Analysis (PCA) is the name for a process of
reducing the dimension of a large data set (when the observations one
wishes to compare is described by many variables) into a smaller
simplified version of the original data set that retains the most
salient features of the data. PCA is a broadly used statistical method
whose use stretches across many scientific disciplines, and in turn many
different adaptations of PCA have been developed based on the variation
in goals and data types associated with each respective discipline. PCA
was developed first by Pearson (1901) and Hotelling (1933) [@Camargo].
This technique transforms some number of possibly correlated variables
into a smaller number of variables, the variables in this smaller matrix
are referred to as the Principal Components (PC). This is achieved using
a vector space transform. By mathematical projection we can interpret
the original data set with just a few variables, namely the principal
components achieved through calculation. The purpose of reducing
dimension size in large data sets is to make it easier to spot trends,
patterns, and outliers in data where that information would have
previously been hidden by the size of data set of interest (Richardson).
The information being preserved in the process of reduction is the
variability in the data (i.e. the statistical information present in the
data). In order to preserve as much variability as possible we should
"...find new variables that are linear functions of those in the
original data set, that successively maximize variance and that are
uncorrelated with each other" [@Jolliffe]. PCA assumes no distribution
in data in a descriptive context which is one of it's key features that
makes it so widely adaptive as an exploratory method across disciplines
and data types [@Jolliffe]. To lists all of PCA's applications would be
tedious and excessive, but some examples where PCA has been used is in
facial recognition, image analysis, analysis of web data, and cyber
security analysis. Essentially anywhere that large data sets are found
PCA can be used to aid in discovering trends amongst the variables of
that data. One key field PCA has seen use is in the analysis of cyber
security network data. PCA could see many applications in web data
analysis as the amount of data for this purpose is always increasing and
becoming more relevant.]{style="color: #8B814C;"}

[Taking a look into a real world example, say we have a dataset
consisting of 1,000 students with exam scores from 7 different courses:
Advanced Statistics, Probability Theory, Intro to Dance, World
Religions, and Religion in America. We could group Advanced Statistics
and Probability Theory into a new variable called Stats, group World
Religions and Religion in America into a new variable Religion, and keep
Intro to Dance by itself. We have Reduced the data set from 7 variables
to 3 without much loss in variation. This is the main concept behind PCA
except variables are not manually regrouped but instead the new
variables (principal components) are derived from certain linear
combinations of the original variables
[@lang2021applied].]{style="color: #8B814C;"}

[PCA can also be useful when studying mental disorders, data consisting
of symptoms and the connections between them. When many symptoms are
being observed, it can be difficult to visually represent the
connections between them, both the strength of the connections and the
proximity to each other. Plotting using the first 2 principal components
allows for the placement on the x or y axis to become interpretable,
that is, observations far left differ in some dimension (the first
principal component) compared to ones far right. The same can be said in
the y direction [@Jones].]{style="color: #8B814C;"}

![](index_files/figure-html/machineLearning_fig1.png)

## [Methods]{style="color: #191970;"}

[How PCA is used PCA is a tool for identifying the main axes of variance
within a data set and allows for easy data exploration to understand the
key variables in the data and spot outliers. Properly applied, it is one
of the most powerful tools in the data analysis tool kit. PCA forms the
basis of multivariate data analysis based on projection methods. The
most important use of PCA is to represent a multivariate data table as
smaller set of variables (summary indices) to observe trends, jumps,
clusters and outliers. This overview may uncover the relationships
between observations and variables, and among the variables.
Statistically, PCA finds lines, planes and hyper-planes in the
K-dimensional space that approximate the data as well as possible in the
least squares sense. A line or plane that is the least squares
approximation of a set of data points makes the variance of the
coordinates on the line or plane as large as
possible.]{style="color: #8B814C;"}

[**Given a sample of data:**
${\{x_1}, ... , {x_n}\}, where\ {x_i} = {({x_{i1}}, ... , {x_{ip}})}^T$]{style="color: #8B814C;"}

[**We will estimate the sample mean vector** $\overline{x} = \hat{\mu}$
and the sample cov matrix $S = \hat{\sum}$]{style="color: #8B814C;"}

[$$\overline{x} = \frac{1}{n} \sum_{i=1}^{n} x_i \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ S = {(\hat{\sigma}_{ij})}_{p{\sf x}p} = \frac{1}{n-1} \sum_{i=1}^{n} {(x_i - \overline{x})(x_i - \overline{x})}^T$$]{style="color: #8B814C;"}

[PCA results depend on the scale or units of the variables so, for
unscaled data, calculations should either be preformed on the
correlation matrix (instead of the covariance matrix) or the data should
be standardized with mean 0 and variance 1 (z scores).
[@lang2021applied]]{style="color: #8B814C;"}

## [Analysis and Results]{style="color: #191970;"}

```{r, warning=FALSE, echo=T, message=FALSE}
# loading packages 
library(dplyr)
library(ggplot2)
library(data.table)
library(ggfortify)
library(MASS)
library(tidyr)
library(paletteer)
library(knitr)
```

## [Data and Vizualisation]{style="color: #191970;"}

[**Conspiracy Data**]{style="color: #8B814C;"}

```{r, warning=FALSE, echo=TRUE}
# Load Data
conspiracy<- (read.csv("https://raw.githubusercontent.com/bjcarr08/sampleData/main/kaggleConspiracyTheoriesData.csv", stringsAsFactors = T))[,-1]
DescTools::Desc(conspiracy)[[1]]$abstract

# REMOVE ROWS WITH NAs
conspiracy<- conspiracy[complete.cases(conspiracy),]

# STANDARDIZED VARIABLES
conspiracy.Stdz<- conspiracy %>% mutate(across(.cols=truther911:vaportrail, scale))

# LONG DATA
conspiracy.Long<- conspiracy %>% pivot_longer(!y, names_to="conspiracy", values_to="score", values_transform=list(score=as.numeric))
conspiracy.Stdz.Long<- conspiracy.Stdz %>% pivot_longer(!y, names_to="conspiracy", values_to="stdzScore", values_transform=list(stdzScore=as.numeric))

# FREQUENCY HISTOGRAMS
ggplot(conspiracy.Long, aes(score, fill=conspiracy, color=conspiracy)) +
  geom_histogram(alpha=0.2, breaks=seq(0,5,1)) +
  lemon::facet_rep_wrap(.~conspiracy, nrow=4, labeller="label_both", repeat.tick.labels=T) +
  labs(title="Raw Scores") +
  theme_bw() +
  theme(legend.position = "none",
        panel.border = element_rect(color = "#8B814C"),
        strip.background = element_rect(fill = "#EAEAD6", color = "#8B814C"),
        strip.text = element_text(color = "#8B814C"),
        plot.background = element_rect(fill = "#FAFAF5"),
        axis.text = element_text(color = "#8B814C"),
        axis.title = element_text(color = "#8B814C"),
        plot.title = element_text(color = "#8B814C"),
        axis.ticks = element_line(color = "#8B814C"))

ggplot(conspiracy.Stdz.Long, aes(stdzScore, fill=conspiracy, color=conspiracy)) +
  geom_histogram(alpha=0.2, breaks=seq(-2,3,1)) +
  lemon::facet_rep_wrap(.~conspiracy, nrow=4, labeller="label_both", repeat.tick.labels=T) +
  labs(title="Standardized Scores") +
  theme_bw() +
  theme(legend.position = "none",
        panel.border = element_rect(color = "#8B814C"),
        strip.background = element_rect(fill = "#EAEAD6", color = "#8B814C"),
        strip.text = element_text(color = "#8B814C"),
        plot.background = element_rect(fill = "#FAFAF5"),
        axis.text = element_text(color = "#8B814C"),
        axis.title = element_text(color = "#8B814C"),
        plot.title = element_text(color = "#8B814C"),
        axis.ticks = element_line(color = "#8B814C"))
```

## [Statistical Modeling]{style="color: #191970;"}

**Conspiracy Data**

```{r, warning=FALSE, echo=TRUE}

conspiracy<- conspiracy %>% filter(y!="Not Sure") # removed rows where participant marked 'not sure' as political party

# Re LEVEL Political Ideology
conspiracy$y<- factor(conspiracy$y, levels=c("Very Liberal", "Liberal", "Somewhat Liberal", "Middle of the Road", "Somewhat Conservative", "Conservative", "Very Conservative"))

# re name y variable
names(conspiracy)[9]<- "PoliticalIdeology"

df<- conspiracy[,-9]
autoplot(prcomp(df, scale.=T), 
         data=conspiracy, colour="PoliticalIdeology",
         loadings=T, loadings.label=T, loadings.colour=alpha("#191970", 0.3), loadings.label.colour="#191970") + 
  scale_colour_manual(values = alpha(paletteer_d("rcartocolor::Temps"), 0.4)) +
  theme_bw() +
  theme(legend.key = element_rect(fill = "#FAFAF5"),
        legend.background = element_rect(fill = "#FAFAF5"),
        legend.text = element_text(color = "#8B814C"),
        legend.title = element_text(color = "#8B814C"),
        panel.border = element_rect(color = "#8B814C"),
        plot.background = element_rect(fill = "#FAFAF5"),
        axis.text = element_text(color = "#8B814C"),
        axis.title = element_text(color = "#8B814C"),
        axis.ticks = element_line(color = "#8B814C"))
  
```

## [Conclusion]{style="color: #191970;"}

## References {#refs .bibliography style="background-color: #FAFAF5; color: #8B814C"}
